syntax = "proto3";

option go_package = ".;example";
package example;

import "google/api/annotations.proto";
import "google/protobuf/empty.proto";
import "protoc-gen-swagger/options/annotations.proto";

option (grpc.gateway.protoc_gen_swagger.options.openapiv2_swagger) = {
	info: {
		title: "Your Service";
		version: "1.0";
		contact: {
			name: "Your Service project";
			url: "https://github.com/pieterclaerhout/example-grpc-gateway";
			email: "pieter@yellowduck.be";
		}
	};
};

message StringMessage {
    // The string value contained in the message
    string value = 1;
}

// A sample RPC service
service YourService {

    // Echo allows posting a StringMessage value.
    //
    // It also exposes multiple bindings.
    //
    // This makes it useful when validating that the OpenAPI v2 API
    // description exposes documentation correctly on all paths
    // defined as additional_bindings in the proto.
    rpc Echo(StringMessage) returns (StringMessage) {
        option (google.api.http) = {
            post: "/v1/example/echo"
            body: "*"
        };
    }

}

service AnotherService {

    rpc HelloWorld(google.protobuf.Empty) returns (StringMessage) {
        option (google.api.http) = {
            get: "/v1/another/hello"
        };
    }
    
}